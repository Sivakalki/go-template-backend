version: "3"

services:
  app:
    build: .
    container_name: my-go-service
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
      - kafka
    environment:
      - MONGO_URI=mongodb://admin:admin@mongodb:27017
      - MONGO_DB=myappdb
      - KAFKA_BROKER=kafka:9092
    command: >
      sh -c "go mod download && go run cmd/service/main.go"

  email-worker:
    build: .
    container_name: my-go-email-worker
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      - kafka
    environment:
      - MONGO_URI=mongodb://admin:admin@mongodb:27017
      - MONGO_DB=myappdb
      - KAFKA_BROKER=kafka:9092
    command: sh -c "go mod download && go run cmd/email-worker/main.go"

  mongodb:
    image: mongo:8.0
    container_name: mongodb
    command: ["--quiet"]
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - mongo-data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_LOGGERS: "kafka.controller=WARN,kafka.producer.async.DefaultEventHandler=WARN,state.change.logger=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN

volumes:
  mongo-data:
